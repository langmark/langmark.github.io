// Generated by CoffeeScript 1.10.0
(function() {
  var app, dataSources;

  dataSources = [
    {
      name: 'Travis',
      results: 'https://raw.githubusercontent.com/langmark/langmark/pushes/results.txt',
      base: 'https://raw.githubusercontent.com/langmark/langmark/pushes/results/',
      master: true
    }
  ];

  app = angular.module('langmark', []);

  app.controller('MainController', [
    '$scope', '$http', function($scope, $http) {
      var _, fn, parseDate, scrollEnabled, source;
      $scope.analyzers = {};
      $scope.currentAnalyzer = null;
      $scope.currentFile = null;
      $scope.files = [];
      scrollEnabled = true;
      fn = function(source) {
        return $http.get(source.results).then(function(response) {
          var file, i, last, len, results;
          results = response.data.split("\n").filter(function(x) {
            return x !== "" && x[0] !== '#';
          });
          for (i = 0, len = results.length; i < len; i++) {
            file = results[i];
            $scope.analyzers[file] = new Analyzer(source.base + file, "[" + source.name + "] " + (parseDate(file)));
            $scope.files.push({
              name: "[" + source.name + "] " + (parseDate(file)),
              file: file
            });
          }
          if (source.master) {
            last = $scope.files[$scope.files.length - 1];
            $scope.currentFile = last;
            return $scope.loadData(last.file);
          }
        });
      };
      for (_ in dataSources) {
        source = dataSources[_];
        fn(source);
      }
      $scope.loadData = function(index) {
        if (index == null) {
          index = $scope.currentFile.file;
        }
        return $scope.analyzers[index].loadData($http, true, function() {
          var hash;
          $scope.analyzers[index].draw();
          $scope.currentAnalyzer = $scope.analyzers[index];
          hash = window.location.hash;
          if (hash && scrollEnabled) {
            $('body').animate({
              scrollTop: $(hash).offset().top
            });
            return scrollEnabled = false;
          }
        });
      };
      return parseDate = function(date) {
        return date.slice(6, 8) + "/" + date.slice(4, 6) + "/" + date.slice(0, 4) + " at " + date.slice(8, 10) + ":" + date.slice(10, 12) + ":" + date.slice(12, 14);
      };
    }
  ]);

}).call(this);
